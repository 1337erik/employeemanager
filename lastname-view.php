<?php include( './head.php' );

    $stmt = $conn->prepare( "SELECT * FROM EMPLOYEE LEFT JOIN BRANCH ON EMPLOYEE.branch_id = BRANCH.branch_id" );
    $stmt->execute();

    // set the resulting array to associative
    $result = $stmt->setFetchMode( PDO::FETCH_ASSOC );

    echo '<h1 class="page-head">All Employees and Branch Relationships</h1>';

    echo '<main>';
    foreach( $stmt->fetchAll() as $emp ) { ?>

        <div class="emp-wrap">

            <?php // print_r( $emp ); ?>
            <h1 class="emp-name"><b>Name:</b> <?= $emp[ 'first_name' ] . ' ' . $emp[ 'last_name' ]; ?><h1>
            <h3 class="emp-gender"><b>Gender:</b> <?php echo $emp[ 'gender' ] == 'm' ? 'male' : 'female'; ?></p>
            <?php if( $emp[ 'branch_id' ] ): ?>

                <p class="emp-branch"><b>Member of Branch:</b> <?= $emp[ 'branch_name' ]; ?></p>
            <?php else: ?>

                <p class="emp-branch"><b>No Branch</b></p>
            <?php endif; ?>
        </div>
    <?php }

    echo '</main>';
?>



<?php include( './foot.php' ); ?>





<?php /*

Create a lastname-view.php file. This file should:
a. Display all of the records from at least one of your tables in a nicely formatted
way.
 Nicely formatted may mean a table of values, but this certainly doesn’t
have to be the case. Lists, divisions, links, etc. could all be generated by
PHP from the data in your database.
 If you choose to display joined information from your two tables, you can
earn up to 5 extra credit points on this assignment.


*/ ?>